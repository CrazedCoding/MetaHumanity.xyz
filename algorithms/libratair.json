{"name":"Default Algorithm","type":14,"state":{"has_html":false,"has_client":true,"has_server":false},"html":"<!--Enter HTML here. -->","client":"var canvas = pipeline.contexts[pipeline.contexts.length-1].canvas;\n\ncanvas.style.position = 'fixed';\ncanvas.style.width = '100%';\ncanvas.style.height = '100%';\ndocument.body.prepend(canvas);\nfunction res(){\n    pipeline.contexts[pipeline.contexts.length-1].resizeCanvas()\n}\nwindow.addEventListener('resize', res);\n","pipeline":{"contexts":[{"name":"image-context","width":{"type":1,"exact_value":"return 2*window.innerWidth;"},"height":{"type":1,"exact_value":"return 2*window.innerHeight;"},"depth_test":false,"identifier":"context_identifier_0"}],"programs":[{"name":"output-program","uniforms":[{"type":0,"name":"width","value":"return pipeline.getContext('image-context').canvas.width;","identifier":"program_identifier_2_uniform_7"},{"type":0,"name":"height","value":"return pipeline.getContext('image-context').canvas.height;","identifier":"program_identifier_2_uniform_8"},{"type":0,"name":"time","value":"if(!this.timeUniformStart) this.timeUniformStart = ((new Date()).getTime())/1E3;\n   return ((new Date()).getTime())/1E3-this.timeUniformStart;","identifier":"program_identifier_2_uniform_9"}],"frag_code":"#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\nprecision highp int;\n\n\n#define UNIFORM_INSERTION_POINT\n#define iResolution (vec2(width,height))\nvarying vec2 vPosition;\n        \n\n#define iTime (time*7.783)\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat noise( in vec2 x )\n{\n\treturn cos(1.5*x.x)*sin(1.5*x.y);\n}\n\nfloat fbm4( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5783*noise( p ); p = m*p*2.02;\n    f += 0.2783*noise( p ); p = m*p*2.03;\n    f += 0.1783*noise( p ); p = m*p*2.01;\n    f += 0.0783*noise( p );\n    return f/0.93783;\n}\n\nfloat fbm6( vec2 p )\n{\n    float f = 0.0;\n    f += 0.500783*(0.5+0.5*noise( p )); p = m*p*2.02;\n    f += 0.250783*(0.5+0.5*noise( p )); p = m*p*2.03;\n    f += 0.125783*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.062783*(0.5+0.5*noise( p )); p = m*p*2.04;\n    f += 0.031783*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.015783*(0.5+0.5*noise( p ));\n    return f/0.96783877835;\n}\n\n\nfloat func( vec2 q, out vec4 ron )\n{\n    float ql = length( q );\n    q.x += 0.0783*sin(0.27*iTime+ql*4.1);\n    q.y += 0.0783*sin(0.23*iTime+ql*4.3);\n    q *= 0.783;\n\n\tvec2 o = vec2(0.0);\n    o.x = 0.783 + 0.783*fbm4( vec2(2.0*q          )  );\n    o.y = 0.783 + 0.783*fbm4( vec2(2.0*q+vec2(5.2))  );\n\n\tfloat ol = length( o );\n    o.x += 0.02783*sin(0.12783*iTime+ol)/ol;\n    o.y += 0.02783*sin(0.14783*iTime+ol)/ol;\n\n    vec2 n;\n    n.x = fbm6( vec2(4.783*o+vec2(9.783))  );\n    n.y = fbm6( vec2(4.783*o+vec2(5.783))  );\n\n    vec2 p = 4.0*q + 4.0*n;\n\n    float f = 0.5 + 0.5*fbm4( p );\n\n    f = mix( f, f*f*f*3.5, f*abs(n.x) );\n\n    float g = 0.5 + 0.5*sin(4.0*p.x)*cos(4.0*p.y);\n    f *= 1.0-0.5*pow( g, 9.0 );\n\n\tron = vec4( o, n );\n\t\n    return f;\n}\n\n\n\nvec3 doMagic(vec2 p)\n{\n\tvec2 q = p*1.6;\n\n    vec4 on = vec4(0.5);\n    float f = func(q, on);\n\n\tvec3 col = vec3(0.0);\n    col = mix( vec3(0.2,0.1,0.4), vec3(0.3,0.05,0.05), f );\n    col = mix( col, vec3(0.4,0.9,0.7), dot(on.zw,on.zw) );\n    col = mix( col, vec3(0.2,0.5,0.3), 0.5*on.y*on.y );\n    col = mix( col, vec3(0.8,0.8,0.6), 0.5*smoothstep(1.2,1.3,abs(on.z)+abs(on.w)) );\n    col = clamp( col*f*2.0, 0.0, 1.0 );\n    \n\tvec3 nor = normalize( vec3( dFdx(f)*iResolution.x, 6.0, dFdy(f)*iResolution.y ) );\n\n    vec3 lig = normalize( vec3( 0.9, -0.2, -0.4 ) );\n    float dif = clamp( 0.3+0.7*dot( nor, lig ), 0.0, 1.0 );\n    vec3 bdrf;\n    bdrf  = vec3(0.70,0.90,0.95)*(nor.y*0.5+0.5);\n    bdrf += vec3(0.15,0.10,0.05)*dif;\n    col *= 1.2*bdrf;\n\tcol = 1.0-col;\n\treturn 1.1*col*col;\n}\nvoid main()\n{\n    vec2 q = (iResolution*vPosition) / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * q;\n    p.x *= iResolution.x/iResolution.y;\n\n    gl_FragColor = vec4( doMagic( p ), 1.0 );\n}\n","vert_code":"precision highp float;\nprecision highp int;\n\n#define UNIFORM_INSERTION_POINT\n\nattribute highp vec4 vertex; \n\nvarying vec2 vPosition;\nvoid main(void) {\n    vPosition = vertex.xy;\n    gl_Position = vec4(vPosition*2.-1., 0., 1.);\n}\n","identifier":"program_identifier_2"}],"stages":[{"type":0,"name":"main-stage","context_name":"image-context","program_name":"output-program","mesh_vertices_eval":"","mesh_indices_eval":"","identifier":"stage_identifier_0"}]}}